on:
  pull_request:
    branches: main
    paths: '**/survivalsvm**'

name: survivalsvm (ubuntu-latest, release)

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.env.TEST }} Test

    strategy:
      fail-fast: false
      matrix:
        env:
          - { test: "Learner"}
          - { test: "Param"}
        config:
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      PKG: survivalsvm
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      TEST: ${{ matrix.env.test }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Install pak and query dependencies
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps("local::.", dependencies = TRUE), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.R_LIBS_USER }}/*
            !${{ env.R_LIBS_USER }}/pak
          key: ${{ matrix.config.os }}-${{ matrix.env.PKG }}-${{ steps.install-r.outputs.installed-r-version }}-1-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: ${{ matrix.config.os }}-${{ matrix.env.PKG }}-${{ steps.install-r.outputs.installed-r-version }}-1-

      - name: Install system dependencies
        run: |
          pak::local_system_requirements(execute = TRUE)
          pak::pkg_system_requirements("testthat", execute = TRUE)
        shell: Rscript {0}

      - name: Install package dependencies
        run: |
          pak::local_install_dev_deps(upgrade = TRUE, dependencies = "indirect")
          pak::pkg_install("testthat")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Learner test
        if: ${{ matrix.env.TEST }} == "Learner"
        run: |
          options(crayon.enabled = TRUE)
          testthat::test_dir(as.package(".")$path, sprinf("%s_", ${{ matrix.env.PKG }}))
        shell: Rscript {0}

      - name: Parameter test
        if: ${{ matrix.env.TEST }} == "Param"
        run: |
          options(crayon.enabled = TRUE)
          testthat::test_dir(system.file("paramtest", package = "mlr3extralearners"), filter = sprintf("_%s_", ${{ matrix.env.PKG }}))
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: check
